# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /bookmarks                  com.keepit.controllers.BookmarksController.bookmarksView

POST    /bookmarks/add              com.keepit.controllers.BookmarksController.addBookmarks
GET     /bookmarks/all              com.keepit.controllers.BookmarksController.all
GET     /bookmarks/edit             com.keepit.controllers.BookmarksController.edit(id: Id[Bookmark])
POST    /bookmarks/delete           com.keepit.controllers.BookmarksController.delete(id: Id[Bookmark])

GET     /bookmarks/search           com.keepit.controllers.BookmarksController.searchBookmarks(term: String, keepitId: Id[User])

GET     /users                      com.keepit.controllers.UserController.usersView
GET     /user                       com.keepit.controllers.UserController.userView(userId: Id[User])
GET     /users/keepurl              com.keepit.controllers.UserController.usersKeptUrl(url: String)

GET     /welcome                    com.keepit.controllers.AuthController.welcome
GET     /isLoggedIn                 com.keepit.controllers.AuthController.isLoggedIn

POST    /users/anonymous            com.keepit.controllers.UserController.createAnonymous

POST    /chat/:recipientId          com.keepit.controllers.ChatController.chat(recipientId: ExternalId[User])

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


##########################################
# Secure social routes
##########################################

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration
GET     /signup                     securesocial.controllers.Registration.signUp
POST    /signup                     securesocial.controllers.Registration.handleSignUp

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.LoginPage.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.LoginPage.authenticateByPost(provider)

