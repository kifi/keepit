#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

securesocial {
  #
  # Where to redirect the user if SecureSocial can't figure that out from
  # the request that led the use to the login page
  #
  onLoginGoTo=/welcome

  #
  # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
  #
  onLogoutGoTo=/login

  twitter {
    requestTokenUrl="https://twitter.com/oauth/request_token"
    accessTokenUrl="https://twitter.com/oauth/access_token"
    authorizationUrl="https://twitter.com/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  facebook {
#    authorizationUrl="https://graph.facebook.com/oauth/authorize"
    authorizationUrl="https://www.facebook.com/dialog/oauth" 
    accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    clientId=104629159695560
    clientSecret=352415703e40e9bb1b0329273fdb76a9
    # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    scope="email,xmpp_login"
  }

  google {
    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
  }

    linkedin {
        requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
        accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
        authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
        consumerKey=your_consumer_key
        consumerSecret=your_consumer_secret
    }
}
