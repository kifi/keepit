#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

securesocial {
  #
  # Where to redirect the user if SecureSocial can't figure that out from
  # the request that led the use to the login page
  #
  onLoginGoTo=/welcome

  #
  # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
  #
  onLogoutGoTo=/login

  twitter {
    requestTokenUrl="https://twitter.com/oauth/request_token"
    accessTokenUrl="https://twitter.com/oauth/access_token"
    authorizationUrl="https://twitter.com/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  facebook {
#    authorizationUrl="https://graph.facebook.com/oauth/authorize"
    authorizationUrl="https://www.facebook.com/dialog/oauth" 
    accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    clientId=104629159695560
    clientSecret="352415703e40e9bb1b0329273fdb76a9"
    # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    # for more information see http://developers.facebook.com/docs/reference/login/extended-permissions/ and http://developers.facebook.com/docs/reference/login/open-graph-permissions/
    scope="email,publish_actions,user_about_me,user_activities,user_birthday,user_education_history,user_groups,user_hometown,user_interests,user_likes,user_location,user_relationship_details,user_relationships,user_status,user_website,user_work_history,friends_online_presence,offline_access,publish_stream,share_item,status_update,user_online_presence,xmpp_login,friends_about_me,friends_activities,friends_birthday,friends_education_history,friends_groups,friends_hometown,friends_interests,friends_likes,friends_location,friends_relationship_details,friends_relationships,friends_status,friends_website,friends_work_history"
  }

  google {
    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
  }

  linkedin {
      requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
      accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
      authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
      consumerKey=your_consumer_key
      consumerSecret=your_consumer_secret
  }
}
