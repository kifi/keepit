##########################################
# Search Admin
##########################################
GET         /admin/search/instance         @com.keepit.search.controllers.search.SearchAdminController.instance()

##########################################
# Search Extension API
##########################################
GET         /ext/search                    @com.keepit.search.controllers.ext.ExtSearchController.search2(q: String, n: Int ?= 5, f: Option[String], u: Option[String], c: Option[String], v: Option[KifiExtVersion], debug: Option[String])

POST        /ext/search/prime              @com.keepit.search.controllers.ext.ExtSearchController.warmUp()

POST        /ext/search/events/searched    @com.keepit.search.controllers.ext.ExtSearchEventController.searched()
POST        /ext/search/events/clicked     @com.keepit.search.controllers.ext.ExtSearchEventController.clickedSearchResult()

# Note:     /ext/search/message is not yet in use
GET         /ext/search/message            @com.keepit.search.controllers.ext.ExtMessageSearchController.search(q: String, page: Int ?= 0)

##########################################
# Mobile V1
##########################################
GET         /m/1/search/users/page        @com.keepit.search.controllers.mobile.MobileUserSearchController.pageV1(query: String, filter: Option[String], pageNum: Int, pageSize: Int)
POST        /m/1/search/events/clickedSearchResult        @com.keepit.search.controllers.mobile.MobileSearchEventController.clickedSearchResult()
POST        /m/1/search/events/searched        @com.keepit.search.controllers.mobile.MobileSearchEventController.searched()
GET         /m/1/search/message        @com.keepit.search.controllers.mobile.MobileMessageSearchController.search(q: String, page: Int ?= 0)

##########################################
# Mobile V2
##########################################

GET         /m/2/search       @com.keepit.search.controllers.mobile.MobileSearchController.searchV2(q: String, f: Option[String] ?= None, maxUris: Int ?= 0, uriContext: Option[String] ?= None, lastUUIDStr: Option[String] ?= None, maxLibraries: Int ?= 0, libraryContext: Option[String] ?= None, maxUsers: Int ?= 0, userContext: Option[String] ?= None, disablePrefixSearch: Boolean ?= false, orderBy: Option[String] ?= None, is: Option[ImageSize] ?= None, debug: Option[String] ?= None)

##########################################
# Search Website API
##########################################
GET         /site/search                        @com.keepit.search.controllers.website.WebsiteSearchController.search(q: String, f: Option[String] ?= None, l: Option[String] ?= None, u: Option[String] ?= None, o: Option[String] ?= None, maxUris: Int ?= 0, uriContext: Option[String] ?= None, lastUUIDStr: Option[String] ?= None, maxLibraries: Int ?= 0, libraryContext: Option[String] ?= None, maxUsers: Int ?= 0, userContext: Option[String] ?= None, disablePrefixSearch: Boolean ?= false, orderBy: Option[String] ?= None, auth: Option[String] ?= None, is: Option[ImageSize] ?= None, debug: Option[String] ?= None)
GET         /site/search/warmUp                 @com.keepit.search.controllers.website.WebsiteSearchController.warmUp()
POST        /site/search/events/resultClicked   @com.keepit.search.controllers.website.WebsiteSearchEventController.clickedKifiResult()
POST        /site/search/events/searched        @com.keepit.search.controllers.website.WebsiteSearchEventController.searched()


##########################################
# INTERNAL ROUTES/Search
##########################################

POST        /internal/search/dist/langFreqs       @com.keepit.search.controllers.search.SearchController.distLangFreqs()
POST        /internal/search/dist/augmentation    @com.keepit.search.controllers.search.SearchController.distAugmentation()
POST        /internal/search/dist/search/uri         @com.keepit.search.controllers.search.SearchController.distSearchUris()
POST        /internal/search/dist/search/library   @com.keepit.search.controllers.search.SearchController.distSearchLibraries()
POST        /internal/search/dist/search/user   @com.keepit.search.controllers.search.SearchController.distSearchUsers()

GET         /internal/search/search/uri/explain        @com.keepit.search.controllers.search.SearchController.explainUriResult(query: String, userId: Id[User], uriId: Id[NormalizedURI], libraryId: Option[Long], lang: Option[String], debug: Option[String])
GET         /internal/search/search/library/explain        @com.keepit.search.controllers.search.SearchController.explainLibraryResult(query: String, userId: Id[User], libraryId: Id[Library], acceptLangs: String, debug: Option[String], disablePrefixSearch: Boolean ?= false)
GET         /internal/search/search/user/explain        @com.keepit.search.controllers.search.SearchController.explainUserResult(query: String, userId: Id[User], resultUserId: Id[User], acceptLangs: String, debug: Option[String], disablePrefixSearch: Boolean ?= false)

GET         /internal/search/warmUp/:userId        @com.keepit.search.controllers.search.SearchController.warmUpUser(userId: Id[User])

POST        /internal/search/events/browsed/:userId        @com.keepit.search.controllers.search.SearchEventController.updateBrowsingHistory(userId: Id[User])

GET         /internal/search/updateKeepIndex        @com.keepit.search.controllers.search.IndexController.updateKeepIndex()
GET         /internal/search/updateLibraryIndex     @com.keepit.search.controllers.search.IndexController.updateLibraryIndex()

POST        /internal/search/user/reindex        @com.keepit.search.controllers.search.UserIndexController.reindex()
POST        /internal/search/user/update        @com.keepit.search.controllers.search.UserIndexController.update()
POST        /internal/search/userGraph/update        @com.keepit.search.controllers.search.UserGraphController.updateUserGraph()
POST        /internal/search/searchFriendGraph/update        @com.keepit.search.controllers.search.UserGraphController.updateSearchFriends()
POST        /internal/search/userGraphs/reindex        @com.keepit.search.controllers.search.UserGraphController.reindex()

POST        /internal/search/index/update        @com.keepit.search.controllers.search.ArticleIndexerController.index()
POST        /internal/search/index/reindex        @com.keepit.search.controllers.search.ArticleIndexerController.reindex()
GET         /internal/search/index/sequenceNumber        @com.keepit.search.controllers.search.ArticleIndexerController.getSequenceNumber()
POST        /internal/search/index/refreshSearcher        @com.keepit.search.controllers.search.ArticleIndexerController.refreshSearcher()
POST        /internal/search/index/refreshPhrases        @com.keepit.search.controllers.search.ArticleIndexerController.refreshPhrases()
POST        /internal/search/index/dumpDoc/:id        @com.keepit.search.controllers.search.ArticleIndexerController.dumpLuceneDocument(id: Id[NormalizedURI], deprecated: Boolean)
GET         /internal/search/index/refreshWriter        @com.keepit.search.controllers.search.ArticleIndexerController.refreshWriter()

GET         /internal/search/indexInfo/listAll        @com.keepit.search.controllers.search.IndexController.listIndexInfo
POST        /internal/search/index/library/document  @com.keepit.search.controllers.search.IndexController.getLibraryDocument()


POST        /internal/search/search/users        @com.keepit.search.controllers.search.SearchController.searchUsers()
POST        /internal/search/search/userTypeahead        @com.keepit.search.controllers.search.SearchController.userTypeahead()

GET         /internal/search/searchConfig/:id        @com.keepit.search.controllers.search.SearchConfigController.showUserConfig(id: Id[User])
POST        /internal/search/searchConfig/:id/set        @com.keepit.search.controllers.search.SearchConfigController.setUserConfig(id: Id[User])
GET         /internal/search/searchConfig/:id/reset        @com.keepit.search.controllers.search.SearchConfigController.resetUserConfig(id: Id[User])
GET         /internal/search/defaultSearchConfig/defaultSearchConfig        @com.keepit.search.controllers.search.SearchConfigController.getSearchDefaultConfig

GET         /internal/search/cache/warmResultClick        @com.keepit.search.controllers.search.SearchCacheController.warmResultClick()

GET         /internal/search/searchMessages @com.keepit.search.controllers.search.MessageSearchController.search(userId: Id[User], query: String, page: Int ?= 0)
POST        /internal/search/augmentation   @com.keepit.search.controllers.search.SearchController.augmentation()
POST        /internal/search/augment   @com.keepit.search.controllers.search.SearchController.augment()

->          /        commonService.Routes
