## Config file for settings common to production servers

java.source=1.6

service {
 search {
   host = "search"
   port = 9000
 }
 shoebox {
   host = "shoebox"
   port = 9000
 }
}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="eylNdNAWC:icXZ/JxXVwLTL9>mRrOjxvh7=6YrqtZKX7h62qwuTLrH=F1]a1j:G?"

# Separate from application secret so we can invalidate them independently if needed
optout.secret = "X`JxRg!V6wQ4UUO_L*Db2}a2%rhv>Nr[u8KL#%?U4&z2/E5UXbK^w/_&|F-Lpkh,48I"

# The application language and session
# ~~~~~
application.langs="en"

session = {
  cookieName="KIFI_SESSION"
  httpOnly=true
  maxAge=31536000
  secure=false //enable this only when we'll move to full https
  domain=.kifi.com
}

# Application configuration
# ~~~~~
application.baseUrl="https://www.kifi.com"

# Evolutions
# ~~~~~
evolutionplugin=disabled

# Amazon Resources
# ~~~~~
amazon.s3 = {
  # http://en.wikipedia.org/wiki/Places_in_The_Hitchhiker's_Guide_to_the_Galaxy
  article.bucket = "zarss-b-prod"
  social.bucket = "kakrafoon-b-prod"
  articleSearch.bucket = "article-search-results-b-prod"
  flowerFilter.bucket  = "flower-filter-b-prod"
  wordTopic.bucket = "learning-b-prod"
  abook.bucket = "abook-b-prod"
  clickHistory.bucket = "click-history-b-prod"
  browsingHistory.bucket = "browsing-history-b-prod"
  index = {
    bucket = "index-b-prod"
    inbox = "../../index/s3"
  }
  install.bucket = "install-b-prod"
  typeahead.social.bucket = "typeahead-social-b-prod"
  typeahead.kifi.bucket   = "typeahead-kifi-b-prod"
  typeahead.contact.bucket = "typeahead-contact-b-prod"
  bayes.porn.detector.bucket = "learning-b-prod"
  cortex.bucket = "cortex-b-prod"
  embedly.bucket = "embedly-b-prod"
}

amazon.ec2 = {
  endpoint = "ec2.us-west-1.amazonaws.com"
}

amazon.sqs = {
  enable=false
  maxNumMessages=10
  visibilityTimeout=300
  # add queue config
}

amazon = {
  accessKey = "AKIAJA24QAUWFTZN5JTQ"
  secretKey = "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"
  region = "US_WEST_1"
}

cdn {
  bucket = "images-b-prod"
  base = "//djty7jcqog9qu.cloudfront.net"
}

#proxy = {
#  host = localhost
#  port = 8080
#  protocol = http
#}

# result click tracker
result-click-tracker = {
  dir = "../../index/resultClickTracker"
  numHashFuncs = 12
  syncEvery = 1
}

# click history tracker
click-history-tracker = {
  filterSize = 307
  numHashFuncs = 2
  minHits = 1
}

# browsing history tracker
browsing-history-tracker = {
  filterSize = 3067
  numHashFuncs = 2
  minHits = 1
}

# slider history tracker
slider-history-tracker = {
  filterSize = 8191
  numHashFuncs = 2
  minHits = 1
}

# ~~~~~~~~~~~~~~~~~~
# ZooKeeper
# ~~~~~~~~~~~~~~~~~~
zookeeper.servers = "ec2-54-241-25-186.us-west-1.compute.amazonaws.com:2181,ec2-184-169-130-61.us-west-1.compute.amazonaws.com:2181,ec2-184-169-176-160.us-west-1.compute.amazonaws.com:2181"

# ~~~~~~~~~~~~~~~~~~
# Statsd
# ~~~~~~~~~~~~~~~~~~
statsd {
  enabled = true
  routes.prefix = "routes"
  routes.combined.prefix = "routes.combined"
  host = "statsd.keep42.com"
  port = 8125
}

# ~~~~~~~~~~~~~~~~~~
# Cache Resources
# ~~~~~~~~~~~~~~~~~~
elasticache.config.endpoint="big-master-cache.g4hldh.cfg.usw1.cache.amazonaws.com:11211"

ehcacheplugin=disabled
playcache=enabled

# ~~~~~~~~~~~~~~~~~~
# SecureSocial U/P (to be remove)
# ~~~~~~~~~~~~~~~~~~
smtp { mock = true }

# ~~~~~~~~~~~~~~~~~~
#      Includes
# ~~~~~~~~~~~~~~~~~~
include "prod-securesocial.conf"
include "prod-akka-sync.conf"

# ~~~~~~~~~~~~~~~~~~
# Play WS Http Client
# ~~~~~~~~~~~~~~~~~~
ws {
  #play's default is 2 minutes (120000ms), which seems too high
  #timeout = 30000
  #do we really need it that high as default?
  followRedirects = true
  #default is true
  useProxyProperties = false
  useragent = "Play42"
}

# ~~~~~~~~~~~~~~~~~~~~~~
#      Scraper config
# ~~~~~~~~~~~~~~~~~~~~~~

scraper {

  interval {
    min = 24                        # hours
    max = 1024                      # hours
    increment = 6                   # hours
    decrement = 2                   # hours
  }

  queue {
    terminateThreshold = 120000
    sizeThreshold = 100
    terminatorFreq = 5
  }

  http {
    fetcherEnforcerFreq = 5
    fetcherQSizeThreshold = 100
  }

  initialBackoff = 3                 # hours
  maxBackoff = 1024                  # hours
  maxRandomDelay = 600               # seconds
  changeThreshold = 0.5
  pullMultiplier = 8
  pullFrequency = 5                  # seconds
  scrapePendingFrequency = 30        # seconds
  queued = true
  async = false
  actorTimeout = 20000
  syncAwaitTimeout = 20000
  serviceCallTimeout = 20000
  batchSize = 10
  batchMax = 50
  pendingOverdueThreshold = 20       # minutes
  checkOverdueCountFrequency = 20    # minutes
  overdueCountThreshold = 1000
}

# ~~~~~~~~~~~~~~~~~~~~~~
# ForkJoin Pool
# ~~~~~~~~~~~~~~~~~~~~~~
fork-join-pool {
  parallelism = 16
}

# ~~~~~~~~~~~~~~~~~~~~~~
# Embedly
# ~~~~~~~~~~~~~~~~~~~~~~
embedly {
  enabled = true
}

# ~~~~~~~~~~~~~~~~~~~~~~
# PublicId
# ~~~~~~~~~~~~~~~~~~~~~~
public-id {
  secret = "Or06kM3H447LGmNxWp5PGw==" // AES-128 key (base64 encoded)
}
