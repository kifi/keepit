<configuration>
  <jmxConfigurator />

  <!-- always a good activate OnConsoleStatusListener -->
  <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener" />

  <appender name="app_log" class="ch.qos.logback.core.rolling.RollingFileAppender">
   <file>log/app.log</file>
   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
     <fileNamePattern>log/app.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>

     <!-- daily rollover -->
     <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
       <!-- or whenever the file size reaches 200MB -->
       <maxFileSize>200MB</maxFileSize>
     </timeBasedFileNamingAndTriggeringPolicy>

     <!-- keep N files/days worth of history -->
     <maxHistory>5</maxHistory>
   </rollingPolicy>
   <encoder>
     <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
   </encoder>
  </appender>

  <appender name="async_app_log" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="app_log" />
  </appender>

  <!-- ================================ -->

  <appender name="statsd_log" class="ch.qos.logback.core.rolling.RollingFileAppender">
   <file>log/statsd.log</file>
   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
     <fileNamePattern>log/statsd.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
     <!-- daily rollover -->
     <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
         <!-- or whenever the file size reaches 50MB -->
       <maxFileSize>50MB</maxFileSize>
     </timeBasedFileNamingAndTriggeringPolicy>
     <!-- keep N files/days worth of history -->
     <maxHistory>2</maxHistory>
   </rollingPolicy>
   <encoder>
     <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
   </encoder>
  </appender>

  <appender name="async_statsd" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="statsd_log" />
  </appender>

  <logger name="statsd.com.keepit" level="ALL" additivity="false">
    <appender-ref ref="async_statsd" />
  </logger>

    <!-- ================================ -->

  <appender name="db" class="ch.qos.logback.core.rolling.RollingFileAppender">
   <file>log/db.log</file>
   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
     <fileNamePattern>log/db.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
     <!-- daily rollover -->
     <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
       <!-- or whenever the file size reaches 100MB -->
       <maxFileSize>100MB</maxFileSize>
     </timeBasedFileNamingAndTriggeringPolicy>
     <!-- keep N files/days worth of history -->
     <maxHistory>2</maxHistory>
   </rollingPolicy>
   <encoder>
     <pattern>%msg%n</pattern>
   </encoder>
  </appender>

  <appender name="async_db" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="db" />
  </appender>

  <logger name="com.keepit.db" level="ALL" additivity="false">
    <appender-ref ref="async_db" />
  </logger>

  <!-- ================================ -->

  <appender name="access" class="ch.qos.logback.core.rolling.RollingFileAppender">
   <file>log/access.log</file>
   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
     <fileNamePattern>log/access.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
     <!-- daily rollover -->
     <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
       <!-- or whenever the file size reaches 100MB -->
       <maxFileSize>100MB</maxFileSize>
     </timeBasedFileNamingAndTriggeringPolicy>
     <!-- keep N files/days worth of history -->
     <maxHistory>3</maxHistory>
   </rollingPolicy>
   <encoder>
     <pattern>%msg%n</pattern>
   </encoder>
  </appender>

  <appender name="async_access" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="access" />
  </appender>

  <logger name="com.keepit.access" level="ALL" additivity="false">
    <appender-ref ref="async_access" />
  </logger>

  <!-- ================================ -->

  <appender name="cache" class="ch.qos.logback.core.rolling.RollingFileAppender">
   <file>log/cache.log</file>
   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
     <fileNamePattern>log/cache.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
     <!-- daily rollover -->
     <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
       <!-- or whenever the file size reaches 50MB -->
       <maxFileSize>50MB</maxFileSize>
     </timeBasedFileNamingAndTriggeringPolicy>
     <!-- keep N files/days worth of history -->
     <maxHistory>2</maxHistory>
   </rollingPolicy>
   <encoder>
     <pattern>%msg%n</pattern>
   </encoder>
  </appender>

  <appender name="async_cache" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="cache" />
  </appender>

  <logger name="com.keepit.cache" level="ALL" additivity="false">
    <appender-ref ref="async_cache" />
  </logger>

  <!-- ================================ -->

  <appender name="wanderer" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>log/wanderer.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>log/wanderer.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
    </rollingPolicy>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} %msg%n</pattern>
      <!-- daily rollover -->
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- or whenever the file size reaches 500MB -->
        <maxFileSize>500MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <!-- keep N files/days worth of history -->
      <maxHistory>3</maxHistory>
    </encoder>
  </appender>

  <appender name="async_wanderer" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="wanderer" />
  </appender>

  <logger name="com.keepit.wanderer" level="ALL" additivity="false">
    <appender-ref ref="async_wanderer" />
  </logger>

  <!-- ================================ -->

  <logger name="com.mysql" level="ERROR"/>
  <logger name="com.ning.http" level="INFO"/>
  <!--logger name="securesocial.core" level="DEBUG"/-->

  <root level="INFO">
    <appender-ref ref="async_app_log" />
  </root>

</configuration>
