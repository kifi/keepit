---
- hosts: localhost
  gather_facts: no
  vars_files:
    - vars/ec2.yml
  tasks:
    - name: possibly launch new ec2 instances
      with_items: ec2.instances
      ec2:
        key_name: "{{ ec2.defaults.key_name }}"
        instance_type: "{{ item.instance_type }}"
        # the id is used for EC2 idempotency - once the API is used to launch
        # an instance with a particular id, it will not create that instance
        # again and can throw a IdempotentParameterMismatch error if parameters
        # are different. see:
        #   http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html)
        id: "{{ item.tags.Name }}"
        instance_tags: "{{ item.tags }}"
        count: 1
        count_tag:
          Name: "{{ item.tags.Name }}"
        image: "{{ ec2.defaults.ami }}"
        volumes: "{{ ec2.defaults.volumes }}"
        wait: yes
        group: "{{ ec2.defaults.security_group }}"
        region: "{{ ec2.defaults.region }}"
        zone: "{{ item.zone }}"
        state: present
      register: ec2_task
    - name: add ec2 instances to our hosts lists
      add_host:
        name: "{{ item.1.public_dns_name }}"
        groups: ec2,tag_Service_{{ item.0.item.tags.Service }}
      with_subelements:
       - ec2_task.results
       - instances
    - name: Wait for SSH to come up
      wait_for: host={{ item.1.public_dns_name }} port=22 delay=1 timeout=320 state=started
      with_subelements:
       - ec2_task.results
       - instances

- hosts: ec2
  sudo: yes
  vars_files:
    - vars/ec2.yml
  pre_tasks:
    - name: create etc/init.d/kifi-register-host
      template:
        src: templates/etc/init.d/kifi-register-host.j2
        dest: /etc/init.d/kifi-register-host
        owner: root
        group: root
        mode: 0774
    - name: enable kifi-register-host service
      command: "update-rc.d kifi-register-host start 90 3 4 5 ."
      changed_when: False
    - command: /etc/init.d/kifi-register-host
      changed_when: False
      register: kifi_hostname
    - set_fact:
        ansible_fqdn: "{{ kifi_hostname.stdout_lines.0 }}"

- hosts: tag_Service_abook
  sudo: yes
  roles:
    - { role: kifi.abook }
- hosts: tag_Service_cortex
  sudo: yes
  roles:
    - { role: kifi.cortex }
- hosts: tag_Service_curator
  sudo: yes
  roles:
    - { role: kifi.curator }
- hosts: tag_Service_eliza
  sudo: yes
  roles:
    - { role: kifi.eliza }
- hosts: tag_Service_graph
  sudo: yes
  roles:
    - { role: kifi.graph }
- hosts: tag_Service_heimdal
  sudo: yes
  roles:
    - { role: kifi.heimdal }
- hosts: tag_Service_rover
  sudo: yes
  roles:
    - { role: kifi.rover }
- hosts: tag_Service_scraper
  sudo: yes
  roles:
    - { role: kifi.scraper }
- hosts: tag_Service_search
  sudo: yes
  roles:
    - { role: kifi.search }
- hosts: tag_Service_shoebox
  sudo: yes
  roles:
    - { role: kifi.shoebox }
